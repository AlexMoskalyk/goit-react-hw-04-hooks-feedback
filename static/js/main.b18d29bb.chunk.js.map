{"version":3,"sources":["Components/feedBack/FeedbackOptions.js","Components/notification/Notification.js","Components/section/Section.js","Components/statistics/Statistics.js","Components/main/Main.js","App.js","index.js","Components/feedBack/FeedbackOptions.module.css","Components/main/Main.module.css"],"names":["FeedbackOptions","onLeaveFeedback","options","map","option","name","type","className","styles","btnFeedback","onClick","Notification","massege","Section","children","title","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","initialState","Main","useState","feedback","setFeedback","countTotalFeedback","Object","values","reduce","acc","item","container","e","target","prevFeedback","keys","valueFeedback","goodPercentage","Number","toFixed","countPositiveFeedbackPercentage","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oMAsBeA,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,mCACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAMD,EACNE,KAAK,SACLC,UAAWC,IAAOC,YAClBC,QAAST,EALX,SAOGG,GANIA,SCFAO,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCQEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,6BAAKA,EAAMC,gBACVF,MCQQG,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCHAC,EAAe,CACnBL,KAAM,EACNC,QAAS,EACTC,IAAK,GAkFQI,EA/EF,WACX,MAAgCC,mBAASF,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAmCMC,EAAqB,WAEzB,OADYC,OAAOC,OAAOJ,GAAUK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAa3E,OACE,mCACE,sBAAK1B,UAAWC,IAAO0B,UAAvB,UACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,gBAhDQ,SAACkC,GACjB,IAAM9B,EAAO8B,EAAEC,OAAO/B,KACtBsB,GAAY,SAACU,GAAD,mBAAC,eACRA,GADO,kBAGThC,EAAOgC,EAAahC,GAAQ,QA4CvBH,QAAS2B,OAAOS,KAAKZ,OAKzB,cAAC,EAAD,CAASX,MAAM,aAAf,SACGa,IACC,cAAC,EAAD,CACEV,KAAMQ,EAASR,KACfC,QAASO,EAASP,QAClBC,IAAKM,EAASN,IACdC,MAAOO,IACPN,mBA1B4B,WACtC,IAAMiB,EAAgBX,IAChBY,EAAiBD,EAClBb,EAASR,KAAOqB,EAAiB,IAClC,EACJ,OAAOE,OAAOD,GAAgBE,QAAQ,GAqBRC,KAGtB,cAAC,EAAD,CAAc/B,QAAQ,8BC7EnBgC,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,UAAY,2B","file":"static/js/main.b18d29bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          name={option}\r\n          type=\"button\"\r\n          className={styles.btnFeedback}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ massege }) => {\r\n  return <p>{massege}</p>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  massege: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive Feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport FeedbackOptions from \"../feedBack/FeedbackOptions\";\r\nimport Notification from \"../notification/Notification\";\r\nimport Section from \"../section/Section\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport styles from \"./Main.module.css\";\r\n\r\nconst initialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nconst Main = () => {\r\n  const [feedback, setFeedback] = useState(initialState);\r\n\r\n  // const [good, setGood] = useState(0);\r\n  // const [neutral, setNeutral] = useState(0);\r\n  // const [bad, setBad] = useState(0);\r\n\r\n  const increment = (e) => {\r\n    const name = e.target.name;\r\n    setFeedback((prevFeedback) => ({\r\n      ...prevFeedback,\r\n\r\n      [name]: prevFeedback[name] + 1,\r\n    }));\r\n  };\r\n\r\n  // const increment = (e) => {\r\n  //   const name = e.target.name;\r\n  //   console.log(name);\r\n\r\n  //   switch (name) {\r\n  //     case \"good\":\r\n  //       setGood((prev) => prev + 1);\r\n  //       break;\r\n  //     case \"neutral\":\r\n  //       setNeutral((prev) => prev + 1);\r\n  //       break;\r\n  //     case \"bad\":\r\n  //       setBad((prev) => prev + 1);\r\n  //       break;\r\n\r\n  //     default:\r\n  //       return;\r\n  //   }\r\n  // };\r\n\r\n  const countTotalFeedback = () => {\r\n    const res = Object.values(feedback).reduce((acc, item) => (acc += item), 0);\r\n    return res;\r\n    // return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const valueFeedback = countTotalFeedback();\r\n    const goodPercentage = valueFeedback\r\n      ? (feedback.good / valueFeedback) * 100\r\n      : 0;\r\n    return Number(goodPercentage).toFixed(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onLeaveFeedback={increment}\r\n            options={Object.keys(feedback)}\r\n            // options={[\"good\", \"neutral\", \"bad\"]}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() ? (\r\n            <Statistics\r\n              good={feedback.good}\r\n              neutral={feedback.neutral}\r\n              bad={feedback.bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification massege=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\n// class Main extends Component {\r\n//   state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n//   increment = (e) => {\r\n//     const name = e.target.name;\r\n//     this.setState((prevStats) => ({\r\n//       [name]: prevStats[name] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   countTotalFeedback = () =>\r\n//     Object.values(this.state).reduce((acc, item) => (acc += item), 0);\r\n\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     const valueFeedback = this.countTotalFeedback();\r\n//     const goodPercentage = valueFeedback\r\n//       ? (this.state.good / valueFeedback) * 100\r\n//       : 0;\r\n//     return Number(goodPercentage).toFixed(0);\r\n//   };\r\n\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     const totalfeedback = this.countTotalFeedback;\r\n//     const percentage = this.countPositiveFeedbackPercentage;\r\n//     const addIncrement = this.increment;\r\n\r\n//     return (\r\n//       <>\r\n//         <div className={styles.container}>\r\n//           <Section title=\"Please leave feedback\">\r\n//             <FeedbackOptions\r\n//               onLeaveFeedback={addIncrement}\r\n//               options={Object.keys(this.state)}\r\n//             />\r\n//           </Section>\r\n\r\n//           <Section title=\"Statistics\">\r\n//             {totalfeedback() ? (\r\n//               <Statistics\r\n//                 good={good}\r\n//                 neutral={neutral}\r\n//                 bad={bad}\r\n//                 total={totalfeedback()}\r\n//                 positivePercentage={percentage()}\r\n//               />\r\n//             ) : (\r\n//               <Notification massege=\"No feedback given\" />\r\n//             )}\r\n//           </Section>\r\n//         </div>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Main;\r\n","import React from \"react\";\r\nimport Main from \"./Components/main/Main\";\r\n\r\nconst App = () => {\r\n  return <Main />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__3aipw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__11yMo\"};"],"sourceRoot":""}